# Sistema de Controle de Estoque

---

### Integrantes:

- Gabriel Boreck Seki Ferreira (**RA:** 10725113857; @gabriel-seki)
- Ryan Pereira De Oliveira (**RA:** 1072511002; @Ryan20040419)
- Victor De Souza Pascallhid (**RA:** 10725116196; @Paxcal30112005)
- Gabriel horn espindola (**RA:** 10725116165; @GabrielHorn2806)

---

- üìå Feito em Java-MVC com Maven

---

Este projeto √© um software para gerenciar o estoque de uma mec√¢nica, desenvolvido para atender a uma necessidade fict√≠cia do cotidiano.

### Funcionalidades Principais

1. **Cadastro de Pe√ßas**:
- Nome da pe√ßa
- Id
- Valor
- Unidade de medida
- Quantidade que est√° sendo depositada no Estoque
- Quantidade m√°xima
- Quantidade m√≠nima
- Categoria
1. **Cadastro de Categoria**:
- ID
- Nome da Categoria
- Embalagem (vidro, pl√°stico ou lata)
- Tamanho (pequeno, m√©dio ou grande) 
1. **Controle de estoque**:
- Inspe√ß√£o
- Listagem e sele√ß√£o
- Relat√≥rio do item 
1. **Ajuste de pre√ßo**
- Escreva o nome do produto
- Cadastre o novo pre√ßo
1. **Manipula√ß√£o do estoque **:
- Digite o nome do produto desejado 
- Adicione ou remova a quantidade desejada

### Requisitos Funcionais

**RF01** - O sistema deve permitir o cadastro de novas pe√ßas com os seguintes dados: nome, valor, quantidade, quantidade m√≠nima, quantidade m√°xima, categoria e unidade de medida (ID √© gerado automaticamente).

**RF02** - O sistema deve permitir o cadastro de novas categorias com os seguintes dados: nome, embalagem e tamanho (ID √© gerado automaticamente).

**RF03** - O sistema deve permitir que o usu√°rio registre os ajustes de altera√ß√£o de pre√ßo para as pe√ßas, informando o produto, e o pre√ßo novo desejado.

**RF04** ‚Äì O sistema deve permitir que o usu√°rio manipule o estoque adicionando ou retirando produtos, informando o nome do produto, quantidade que deseja retirar ou alocar.

**RF05** - O sistema deve gerar um relat√≥rio do valor total da quantidade de cada produto e valor total do estoque. 

**RF06** - O sistema deve mostrar a categoria de todos os produtos selecionados e o valor total do estoque¬†desses¬†produtos.

**RF07** - O sistema deve mostrar uma mensagem na tela do usu√°rio, avisando se o estoque est√° acima ou abaixo do recomendado.

### Requisitos N√£o Funcionais

**RNF01** - O sistema deve rodar localmente no computador do usu√°rio.

**RNF02** - O sistema deve garantir a seguran√ßa dos dados dos usu√°rios, como informa√ß√µes de pe√ßas e pre√ßos.

**RNF03** - O sistema deve ser f√°cil de usar, com uma interface intuitiva para o usu√°rio.

**RNF04** - O sistema deve ter um bom desempenho, mesmo com um grande volume de dados.

**RNF05** - O sistema deve ser compat√≠vel com diferentes sistemas operacionais e navegadores.

### Estrutura do Projeto

- **src**: C√≥digo fonte do projeto
- **lib**: Bibliotecas externas utilizadas
- **docs**: Documenta√ß√£o do projeto
- README: Este arquivo

### Instru√ß√µes de Instala√ß√£o e Uso

1. Clone o reposit√≥rio para o seu computador:
    
    ```java
    git clone <https://github.com/uRodolfo/ProjetoA3SQL.git>
    ```
    
2. Abra o projeto no NetBeans.
3. Compile e execute o projeto a partir do NetBeans.
4. Siga as instru√ß√µes na interface do usu√°rio para cadastrar pe√ßas e categorias, registrar entrada/saida de produtos e gerar relat√≥rios.

### Configura√ß√µes do Banco de Dados
- Banco: standard
- Usu√°rio: root
- Senha: Sonho2013


---

Este software foi desenvolvido como parte da UC de Programa√ß√£o de Solu√ß√µes Computacionais, atendendo √† necessidade fict√≠cia de gerenciamento de estoque de um com√©rcio.
